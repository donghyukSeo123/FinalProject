package kr.or.ddit.service.impl;

import java.util.List;
import java.util.UUID;

import javax.inject.Inject;
import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Service;

import kr.or.ddit.ServiceResult;
import kr.or.ddit.mapper.BoardMapper;
import kr.or.ddit.service.IBoardService;
import kr.or.ddit.vo.AttVO;
import kr.or.ddit.vo.BoardVO;
import kr.or.ddit.vo.PaginationInfoVO;

@Service
public class BoardServiceImpl implements IBoardService{

	@Inject
	private BoardMapper mapper;

	@Override
	public int selectBoardCount(PaginationInfoVO<BoardVO> pagingVO) {
		return mapper.selectBoardCount(pagingVO);
	}

	@Override
	public List<BoardVO> selectBoardList(PaginationInfoVO<BoardVO> pagingVO) {
		return mapper.selectBoardList(pagingVO);
	}

	@Override
	public ServiceResult insertBoard(HttpServletRequest req, BoardVO boardVO) {
		ServiceResult result = null;
		int status = mapper.insertBoard(boardVO);
		if(status>0) {
			List<AttVO> boardFileList = boardVO.getBoardFileList();
			try {
				processBoardFile(boardFileList, boardVO.getBoardId(), req);
			} catch (Exception e) {
				e.printStackTrace();
			}
			result = ServiceResult.OK;
			
		}else {
			result = ServiceResult.FAILED;
		}
		return result;
	}

	private void processBoardFile(
			List<AttVO> boardFileList,
			int boardId,
			HttpServletRequest req) {
		if(boardFileList !=null && boardFileList.size()>0) {
			for(AttVO boardFileVO : boardFileList) {
				String saveName = UUID.randomUUID().toString();
			}
		}
	}

	@Override
	public BoardVO selectBoard(int boardId) {
		mapper.incrementHit(boardId);
		return mapper.selectBoard(boardId);
	}
	

}
































