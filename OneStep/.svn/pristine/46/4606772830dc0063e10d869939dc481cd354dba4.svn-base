package kr.or.ddit.controller;

import java.util.Random;

import javax.inject.Inject;
import javax.mail.internet.MimeMessage;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.mail.javamail.JavaMailSenderImpl;
import org.springframework.mail.javamail.MimeMessageHelper;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.service.IMemService;
import kr.or.ddit.vo.MailVO;
import kr.or.ddit.vo.MemberVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping("/member")
public class MemberController {	//일반회원가입페이지로이동
	
	//메일전송 
	@Autowired
	private JavaMailSenderImpl mailSender;
	//Service연결
	@Inject
	private IMemService memService;
	
	//일반회원
	@RequestMapping(value = "/join" , method = RequestMethod.GET)
	public String join() {
		
		return "loginjoin/join";
	}
	//기업회원
	@RequestMapping(value = "/companyjoin" , method = RequestMethod.GET)
	public String companyjoin() {
		
		return "loginjoin/companyjoin";
	}
	
	
	//인증메일 전송
	@RequestMapping(value = "/sendJoin", produces = "text/plain; charset=utf-8")
	@ResponseBody
    public ResponseEntity<String> sendjoinMail(@RequestBody MailVO mvo, HttpSession session ) throws Exception{
		 	Random random = new Random();
			
			int ranNum = random.nextInt(100000);
			
			session.setAttribute("ranNum", ranNum);
	        session.setMaxInactiveInterval(300);
	        
	        String from = "ehdgur534@gmail.com";
	        
	       
	        try {
	            MimeMessage mail = mailSender.createMimeMessage();
	            
	              MimeMessageHelper mailHelper = new MimeMessageHelper(mail,"UTF-8");
	            
	            
	            mailHelper.setFrom(from);
	            // 빈에 아이디 설정한 것은 단순히 smtp 인증을 받기 위해 사용 따라서 보내는이(setFrom())반드시 필요
	            // 보내는이와 메일주소를 수신하는이가 볼때 모두 표기 되게 원하신다면 아래의 코드를 사용하시면 됩니다.
	            //mailHelper.setFrom("보내는이 이름 <보내는이 아이디@도메인주소>");
	            mailHelper.setTo(mvo.getTo());
	            mailHelper.setSubject("인증번호입니다");
	            mailHelper.setText("회원가입 인증번호는 " + ranNum + "입니다", true);
	            // true는 html을 사용하겠다는 의미입니다.
	            
	            /*
	             * 단순한 텍스트만 사용하신다면 다음의 코드를 사용하셔도 됩니다. mailHelper.setText(content);
	             */
	            
	            mailSender.send(mail);
	            
	        } catch(Exception e) {
	            e.printStackTrace();
	            return new ResponseEntity<String>("FAILED", HttpStatus.OK);
	        }
	        
	        
	        return new ResponseEntity<String>("SUCCESS", HttpStatus.OK);
    }
	
	
	@RequestMapping(value = "/numberCheck", produces = "text/plain; charset=utf-8")
	@ResponseBody
    public ResponseEntity<String> numCheck(@RequestBody MailVO mvo, HttpSession session) throws Exception{
		int ranNum;
		System.out.println(mvo.getJoinNum());
		if(session.getAttribute("ranNum")!=null) {
		 ranNum = (int)session.getAttribute("ranNum");
		}else {
			ranNum = 0;
		}
		
		
		if(mvo.getJoinNum().equals(String.valueOf(ranNum))) {
			
			return new ResponseEntity<String>("SUCCESS", HttpStatus.OK);
		}else {
			return new ResponseEntity<String>("FAILED", HttpStatus.OK);
		}
	        
    }
	
	
	
	
	//일반회원 회원가입 DB연동
	@RequestMapping(value = "/join", method = RequestMethod.POST)
	public String joinGo(MemberVO vo) {
		
		System.out.println(vo);
		vo.setMemTel(vo.getMemTel().replaceAll(",","")); 
		int cnt = memService.join(vo);
		System.out.println(cnt);
		return "success";
	}
	
	//일반회원 회원가입 DB연동
	@RequestMapping(value = "/companyjoin", method = RequestMethod.POST)
	public String companyjoinGo(MemberVO vo) {
		
		System.out.println(vo);
		vo.setMemTel(vo.getMemTel().replaceAll(",","")); 
		int cnt = memService.companyJoin(vo);
		System.out.println(cnt);
		return "success";
	}
	
	//비동기 ID중복확인
	@RequestMapping(value ="/memCheck" ,method = RequestMethod.GET)
	public ResponseEntity<String> memCheck(String memId){
		
		System.out.println("멤버아이디: "+memId);
		MemberVO vo = memService.memCheck(memId);
		if(vo==null) {
			return new ResponseEntity<String>("FAILED",HttpStatus.OK);
			
		}
		return new ResponseEntity<String>("SUCCESS",HttpStatus.OK);
	}
}
